---
- name: Ensure Bitwarden folder exists
  ansible.builtin.file:
      path: "/etc/containers/systemd/bitwarden"
      state: directory

- name: Ensure Bitwarden service files are in place
  ansible.builtin.copy:
      src: "bitwarden/"
      dest: "/etc/containers/systemd/bitwarden/"
  register: bitwarden_files_changed
  notify: Restart Bitwarden service

- name: Ensure Bitwarden service secrets are available
  containers.podman.podman_secret:
      state: present
      name: "{{ item.name }}"
      data: "{{ item.data }}"
  loop:
      - name: ts-authkey
        data: "{{ tailscale.ts_authkey }}"
      - name: bw-domain
        data: "{{ bitwarden.bw_domain }}"
      - name: bw-installation-id
        data: "{{ bitwarden.bw_installation_id }}"
      - name: bw-installation-key
        data: "{{ bitwarden.bw_installation_key }}"
      - name: bw-admins
        data: "{{ bitwarden.bw_admins }}"
      - name: bw-reply-to-email
        data: "{{ bitwarden.bw_reply_to_email }}"
      - name: bw-smtp-host
        data: "{{ bitwarden.bw_smtp_host }}"
      - name: bw-smtp-port
        data: "{{ bitwarden.bw_smtp_port }}"
      - name: bw-smtp-ssl
        data: "{{ bitwarden.bw_smtp_ssl }}"
      - name: bw-smtp-username
        data: "{{ bitwarden.bw_smtp_username }}"
      - name: bw-smtp-password
        data: "{{ bitwarden.bw_smtp_password }}"
  register: bitwarden_secrets_changed
  no_log: true
  notify: Restart Bitwarden service

- name: Ensure Bitwarden service is running
  ansible.builtin.systemd_service:
      name: bitwarden-pod.service
      state: started
      daemon_reload: true
  when: not (bitwarden_files_changed.changed or bitwarden_secrets_changed.changed)
