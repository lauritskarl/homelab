---
- name: Ensure Pocket ID folder exists
  ansible.builtin.file:
      path: "/etc/containers/systemd/pocket-id"
      state: directory

- name: Ensure Pocket ID service files are in place
  ansible.builtin.copy:
      src: "pocket-id/"
      dest: "/etc/containers/systemd/pocket-id/"
  register: pocket_id_files_changed
  notify: Restart Pocket ID service

- name: Ensure Pocket ID service secrets are available
  containers.podman.podman_secret:
      state: present
      name: "{{ item.name }}"
      data: "{{ item.data }}"
  loop:
      - name: cf-tunnel-token
        data: "{{ cloudflare.tunnel_token }}"
      - name: id-app-url
        data: "{{ pocketid.app_url }}"
      - name: id-trust-proxy
        data: "{{ pocketid.trust_proxy }}"
      - name: id-emails-verified
        data: "{{ pocketid.emails_verified }}"
      - name: id-allow-user-signups
        data: "{{ pocketid.allow_user_signups }}"
      - name: id-disable-animations
        data: "{{ pocketid.disable_animations }}"
      - name: id-smtp-host
        data: "{{ pocketid.smtp_host }}"
      - name: id-smtp-port
        data: "{{ pocketid.smtp_port }}"
      - name: id-smtp-from
        data: "{{ pocketid.smtp_from }}"
      - name: id-smtp-user
        data: "{{ pocketid.smtp_user }}"
      - name: id-smtp-password
        data: "{{ pocketid.smtp_password }}"
      - name: id-smtp-tls
        data: "{{ pocketid.smtp_tls }}"
      - name: id-email-login-notification-enabled
        data: "{{ pocketid.email_login_notification_enabled }}"
      - name: id-email-one-time-access-as-admin-enabled
        data: "{{ pocketid.email_one_time_access_as_admin_enabled }}"
      - name: id-email-api-key-expiration-enabled
        data: "{{ pocketid.email_api_key_expiration_enabled }}"
  no_log: true
  register: pocket_id_secrets_changed
  notify: Restart Pocket ID service

- name: Ensure Pocket ID service is running
  ansible.builtin.systemd_service:
      name: pocket-id-pod.service
      state: started
      daemon_reload: true
  when: not (pocket_id_files_changed.changed or pocket_id_secrets_changed.changed)
