---
- name: Ensure system is updated
  ansible.builtin.dnf:
      name: "*"
      state: latest
      update_cache: true

- name: Ensure tailscale repo is added
  ansible.builtin.command:
      cmd: dnf config-manager addrepo --from-repofile=https://pkgs.tailscale.com/stable/fedora/tailscale.repo
  args:
      creates: /etc/yum.repos.d/tailscale.repo

- name: Ensure essential packages are installed
  ansible.builtin.dnf:
      name:
          - firewalld
          - tailscale
          - cifs-utils
          - cockpit
          - cockpit-podman
          - cockpit-selinux
          - cockpit-files
          - pcp
          - python3-pcp
          - tuned
          - dnf-automatic
          - podman
      state: latest

- name: Ensure dnf-automatic config is present
  ansible.builtin.copy:
      src: automatic.conf
      dest: /etc/dnf/automatic.conf

- name: Ensure essential services are started
  ansible.builtin.systemd_service:
      name: "{{ item }}"
      state: started
      enabled: true
  loop:
      - firewalld.service
      - tailscaled.service
      - cockpit.socket
      - pmlogger.service
      - pmproxy.service
      - dnf-automatic.timer
      - podman.socket
      - podman-restart.service
      - podman-auto-update.timer

- name: Ensure essential services are allowed through firewall
  ansible.posix.firewalld:
      service: "{{ item }}"
      state: enabled
      permanent: true
      immediate: true
  loop:
      - cockpit
      - pmproxy

- name: Ensure passwordless sudo for wheel group
  ansible.builtin.copy:
      src: wheel
      dest: /etc/sudoers.d/wheel
      mode: "0640"
      validate: "visudo -cf %s"

- name: Ensure system users are present
  ansible.builtin.user:
      name: "{{ item }}"
      groups: wheel
      state: present
  loop: "{{ system_users }}"

- name: Ensure NAS mount directory exists
  ansible.builtin.file:
      path: /mnt/nas
      state: directory

- name: Ensure NAS credentials file is present
  ansible.builtin.template:
      src: .credentials.j2
      dest: /root/.credentials
      mode: "0600"
  notify:
      - Reload nas mount unit

- name: Ensure NAS mount unit is present
  ansible.builtin.template:
      src: mnt-nas.mount.j2
      dest: /etc/systemd/system/mnt-nas.mount
  notify:
      - Reload nas mount unit

- name: Ensure nas share is mounted
  ansible.builtin.systemd_service:
      name: mnt-nas.mount
      state: started
      enabled: true
      daemon_reload: true

- name: Ensure backup directory exists
  ansible.builtin.file:
      path: /mnt/nas/BACKUPS/containers
      state: directory

- name: Ensure backup scripts are present
  ansible.builtin.copy:
      src: scripts/
      dest: /root/scripts/
      mode: "0755"

- name: Ensure backup systemd units are present
  ansible.builtin.copy:
      src: systemd/
      dest: /etc/systemd/system/

- name: Enable backup timer
  ansible.builtin.systemd_service:
      name: backup-container-volumes.timer
      enabled: true
      daemon_reload: true
